# yaml-language-server: $schema=https://spec.openapis.org/oas/3.1/schema/2022-10-07

openapi: 3.1.0
info:
  title: Desa Babakan Asem OpenAPI
  version: 1.0.0
  description: OpenAPI specification for Desa Babakan Asem API
  contact:
    name: Rangga Dedi Darmawan
    email: ranggadendi6@gmail.com
    # url: ranggadendi6@gmail.com
servers:
  - url: http://localhost:4000/api
    description: Main API server  
paths:
  /public/users/login:
    post:
      summary: Login users
      operationId: listUsers
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: John Doe
  /public/users/register:                      
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Jane Doe
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: Jane Doe
  
  # Village Work Programs
  /village-work-programs:
    get:
      summary: Get all village work programs
      operationId: getVillageWorkPrograms
      tags:
        - Village Work Programs
      responses:
        '200':
          description: A list of village work programs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "123e4567-e89b-12d3-a456-426614174000"
                    description:
                      type: string
                      example: "Road construction project"
                    date:
                      type: string
                      format: date-time
                      example: "2023-10-01T00:00:00Z"
                    status:
                      type: string
                      example: "In Progress"
                    justification:
                      type: string
                      example: "Necessary for community development"
                    budget_amount:
                      type: number
                      format: double
                      example: 15000.00  
    post:
      summary: Create a new village work program
      operationId: createVillageWorkProgram
      security:
        - bearerAuth: []
      tags:
        - Village Work Programs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "New park construction"
                date:
                  type: string
                  format: date-time
                  example: "2023-10-01T00:00:00Z"
                status:
                  type: string
                  example: "Planned"
                justification:
                  type: string
                  example: "Enhancing community green spaces"
                budget_amount:
                  type: number
                  format: double
                  example: 20000.00
      responses:
        '201':
          description: Village work program created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "123e4567-e89b-12d3-a456-426614174001"
  
  /village-work-programs/{villageWorkProgramid}:                  
    patch:
      summary: Update a village work program
      operationId: updateVillageWorkProgram
      security:
        - bearerAuth: []
      tags:
        - Village Work Programs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "123e4567-e89b-12d3-a456-426614174000"
                description:
                  type: string
                  example: "Updated road construction project"
                date:
                  type: string
                  format: date-time
                  example: "2023-10-02T00:00:00Z"
                status:
                  type: string
                  example: "Completed"
                justification:
                  type: string
                  example: "Project completed successfully"
                budget_amount:
                  type: number
                  format: double
                  example: 16000.00
      responses:
        '200':
          description: Village work program updated successfully
    delete:
      summary: Delete a village work program
      operationId: deleteVillageWorkProgram
      security:
        - bearerAuth: []
      tags:
        - Village Work Programs
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '204':
          description: Village work program deleted successfully



components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginUser:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com

